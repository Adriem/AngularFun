// Generated by CoffeeScript 1.3.3
/*global require
*/

require({
  map: {
    '*': {
      'libs/angularResource': 'libs/angular-resource'
    }
  },
  shim: {
    'libs/angular': {
      deps: ['libs/modernizr'],
      exports: 'angular'
    },
    'libs/angular-resource': ['libs/angular'],
    'libs/modernizr': {
      exports: 'Modernizr'
    }
  }
}, ['app', 'bootstrap', 'controllers/gitHub', 'controllers/people', 'controllers/personDetails', 'controllers/searchHistory', 'controllers/twitter', 'directives/ngController', 'directives/tabs', 'directives/tab', 'filters/twitterfy', 'libs/angular', 'responseInterceptors/dispatcher'], function(app) {
  app.config([
    '$routeProvider', function($routeProvider) {
      return $routeProvider.when('/github/:searchTerm', {
        controller: 'gitHub',
        reloadOnSearch: true,
        resolve: {
          changeTab: function($rootScope) {
            return $rootScope.$broadcast('changeTab#gitHub');
          }
        }
      }).when('/people/details/:id', {
        controller: 'personDetails',
        reloadOnSearch: true,
        resolve: {
          changeTab: function($rootScope) {
            return $rootScope.$broadcast('changeTab#people');
          }
        }
      }).when('/twitter/:searchTerm', {
        controller: 'twitter',
        reloadOnSearch: true,
        resolve: {
          changeTab: function($rootScope) {
            return $rootScope.$broadcast('changeTab#twitter');
          }
        }
      }).otherwise({
        redirectTo: '/github/CaryLandholt'
      });
    }
  ]);
  return app.run([
    '$rootScope', '$log', function($rootScope, $log) {
      $rootScope.$on('error:unauthorized', function(event, response) {});
      $rootScope.$on('error:forbidden', function(event, response) {});
      $rootScope.$on('error:403', function(event, response) {});
      $rootScope.$on('success:ok', function(event, response) {});
      return $rootScope.$on('$routeChangeSuccess', function(event, currentRoute, priorRoute) {
        return $rootScope.$broadcast("" + currentRoute.controller + "$routeChangeSuccess", currentRoute, priorRoute);
      });
    }
  ]);
});
